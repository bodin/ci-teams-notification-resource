#!/usr/bin/env bash

CURL_OPTION="-v -H 'Content-Type: application/json'"

set -e

cd "${1}"

exec 3>&1
exec 1>&2
#set -x

payload=$(mktemp /tmp/resource-in.XXXXXX)
cat > "${payload}" <&0

echo "Using temporary directory ${payload}"

text_file="$(jq -r '.params.text_file // ""' < "${payload}")"
text=$(jq -r '(.params.text // null)' < $payload)

FILE_CONTENT=""
[[ -n "${text_file}" && -f "${text_file}" ]]; then
  FILE_CONTENT="$(cat "${text_file}")"
fi

if [[ "${text}" == "null" && -n $FILE_CONTENT ]]; then
  text=$FILE_CONTENT
fi

#text=$(echo "$text" | envsubst)

text="$(echo "${text}" | jq -c '.')"
echo $text_file
echo $text
echo $FILE_CONTENT

webhook_url="$(jq -r '.source.url' < "${payload}")"
redacted_webhook_url=$(echo "${webhook_url}" | sed -e 's#/\([^/\.]\{2\}\)[^/.]\{5,\}\([^/.]\{2\}\)#/\1â€¦\2#g' | jq -R .)

url_path="$(echo ${webhook_url} | sed -e "s/https\{0,1\}:\/\/[^\/]*\(\/[^?&#]*\).*/\1/")"
curl ${CURL_OPTION} --data-urlencode "${text}" "${webhook_url}" 2>&1 | sed -e "s#${url_path}#***WEBHOOK URL REDACTED***#g"

timestamp=$(date +%s)
metadata="$(cat <<EOF
{
  "version": {"timestamp": "${timestamp}"},
  "metadata": [
    {"name": "url", "value": ${redacted_webhook_url}},
    {"name": "BUILD_PIPELINE_NAME", "value": "${BUILD_PIPELINE_NAME}"}
  ]
}
EOF
)"

echo "$metadata"  >&3
